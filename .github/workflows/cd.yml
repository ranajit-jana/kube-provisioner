name: Deploy

on:
  pull_request:
    types:
      - closed
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deployment:
    if: github.event.pull_request.merged == true
    environment: deployment
    runs-on: ubuntu-latest
    steps:
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7
          terraform_wrapper: false

      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2.0.0
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::890504605381:role/Deploy-with-OIDC
          role-session-name: awssession
          mask-aws-account-id: false

      - run: terraform init -backend-config=conf/deployment-backend.tfvars
        working-directory: cloud/aws

      - run: |
          if [[ 'deployment' != $(terraform workspace show) ]]; then
            terraform workspace select deployment || terraform workspace new  deployment
          fi
        working-directory: cloud/aws

      - id: plan
        working-directory: cloud/aws
        run: terraform plan -no-color -var-file=conf/deployment-variables.tfvars -out deployment-${{ github.run_id }}.plan


      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Deploy
        working-directory: cloud/aws
        id: tf_deploy
        run: |
          terraform apply -auto-approve -input=false deployment-${{ github.run_id }}.plan
        #  clustername=$(terraform output -json cluster_name |  tr '\n' ' ')
        #  echo "cluster name: $clustername"
        #  echo "reva_cluster_name=$(terraform output -json cluster_name |  tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Setup helmfile
        uses: mamezou-tech/setup-helmfile@v1.2.0


      - name: Helm sync
        working-directory: helm
        run: |
          #echo "kubeoutput : ${{ steps.tf_deploy.outputs.reva_cluster_name }}"
          aws eks --region us-east-1 update-kubeconfig --name my-eks
        # ${{ steps.tf_deploy.outputs.reva_cluster_name }}
          helmfile sync
