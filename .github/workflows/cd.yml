name: Deploy

on:
  pull_request:
    types:
      - closed
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deployment:
    if: github.event.pull_request.merged == true
    environment: deployment
    runs-on: ubuntu-latest
    steps:
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2.0.0
        with:
          aws-region: ap-south-1
          role-to-assume: arn:aws:iam::890504605381:role/Deploy-with-OIDC
          role-session-name: awssession
          mask-aws-account-id: false

      - run: terraform init -backend-config=conf/deployment-backend.tfvars
        working-directory: cloud/aws

      - run: |
          terraform workspace new deployment -backend-config=conf/deployment-backend.tfvars
        working-directory: cloud/aws
      - run: |
          cp conf/deployment-variables.tfvars deployment.tfvars
        working-directory: cloud/aws

      - id: plan
        working-directory: cloud/aws
        run: terraform plan -no-color -backend-config=conf/deployment-backend.tfvars

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Destroy
        working-directory: cloud/aws
        run: |
          terraform apply -backend-config=conf/deployment-backend.tfvars workspace=deployment -auto-approve -input=false
          terraform workspace select default


